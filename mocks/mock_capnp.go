// Code generated by MockGen. DO NOT EDIT.
// Source: internal/task.capnp.go

// Package mocks is a generated GoMock package.
package mocks

import (
	context "context"
	reflect "reflect"

	internal "example.com/task_flow/internal"
	gomock "github.com/golang/mock/gomock"
)

// MockByteStream_Server is a mock of ByteStream_Server interface.
type MockByteStream_Server struct {
	ctrl     *gomock.Controller
	recorder *MockByteStream_ServerMockRecorder
}

// MockByteStream_ServerMockRecorder is the mock recorder for MockByteStream_Server.
type MockByteStream_ServerMockRecorder struct {
	mock *MockByteStream_Server
}

// NewMockByteStream_Server creates a new mock instance.
func NewMockByteStream_Server(ctrl *gomock.Controller) *MockByteStream_Server {
	mock := &MockByteStream_Server{ctrl: ctrl}
	mock.recorder = &MockByteStream_ServerMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockByteStream_Server) EXPECT() *MockByteStream_ServerMockRecorder {
	return m.recorder
}

// Done mocks base method.
func (m *MockByteStream_Server) Done(arg0 context.Context, arg1 internal.ByteStream_done) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "Done", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// Done indicates an expected call of Done.
func (mr *MockByteStream_ServerMockRecorder) Done(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Done", reflect.TypeOf((*MockByteStream_Server)(nil).Done), arg0, arg1)
}

// StreamTask mocks base method.
func (m *MockByteStream_Server) StreamTask(arg0 context.Context, arg1 internal.ByteStream_streamTask) error {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "StreamTask", arg0, arg1)
	ret0, _ := ret[0].(error)
	return ret0
}

// StreamTask indicates an expected call of StreamTask.
func (mr *MockByteStream_ServerMockRecorder) StreamTask(arg0, arg1 interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "StreamTask", reflect.TypeOf((*MockByteStream_Server)(nil).StreamTask), arg0, arg1)
}
