
volumes:
  prometheus_data: {}
  grafana_data: {}
  pgdata: {}

services:

  postgres:
    image: postgres
    container_name: postgres
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
      POSTGRES_DB: task_flow
    ports:
      - "5432:5432"
    networks:
      - monitoring
    volumes:
      - pgdata:/var/lib/postgresql/data

  prometheus:
    image: prom/prometheus:v2.36.2
    container_name: prometheus
    volumes:
      - ./third_party/prometheus/:/etc/prometheus/
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    extra_hosts:
      - "host.docker.internal:host-gateway"  # needs "metrics-addr": "172.17.0.1:9323" line in daemon.json
    ports:
      - 9090:9090
    restart: unless-stopped
    networks:
      - monitoring

  grafana:
    image: grafana/grafana
    container_name: grafana
    user: "472"
    depends_on:
      - prometheus
    ports:
      - 3000:3000
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning/:/etc/grafana/provisioning/
    restart: unless-stopped
    networks:
      - monitoring

  loki:
    image: grafana/loki
    container_name: loki
    user: "root"
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    volumes:
      - ./third_party/loki:/etc/loki
      - ./third_party/loki/loki-data/index:/loki/index
      - ./third_party/loki/loki-data/cache:/loki/cache
      - ./third_party/loki/loki-data/chunks:/loki/chunks
    networks:
      - monitoring

  promtail:
    image: grafana/promtail
    container_name: promtail
    ports:
      - "9080:9080"
    volumes:
      - /var/log:/var/log
      - ./third_party/promtail:/etc/promtail
    command:
      -config.file=/etc/promtail/promtail-config.yaml
    networks:
      - monitoring


  cadvisor:
    image: gcr.io/cadvisor/cadvisor:v0.44.0
    container_name: cadvisor
    # command:
    #   - "--cgroupv2"
    ports:
      - "8080:8080"
    privileged: true
    volumes:
      - /:/rootfs:ro
      - /var/run:/var/run:ro
      - /sys:/sys:ro
      - /sys/fs/cgroup:/sys/fs/cgroup:ro
      - /var/lib/docker/:/var/lib/docker:ro
    networks:
      - monitoring

  consumer:
    container_name: consumer
    build:
      context: .
      dockerfile: cmd/consumer/Dockerfile
    networks:
      - monitoring
    ports:
      - "8091:8091"
    depends_on:
      postgres:
        condition: service_started

  producer:
    container_name: producer
    build:
      context: .
      dockerfile: cmd/producer/Dockerfile
    networks:
      - monitoring
    ports:
      - "8090:8090"
    logging:
      driver: loki
      options:
        loki-url: "http://loki:3100/loki/api/v1/push"
    depends_on:
      postgres:
        condition: service_started
      consumer:
        condition: service_started
  
networks:
  monitoring:
    driver: bridge
    external: true
